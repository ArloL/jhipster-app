name: Main

on:
  push:
  schedule:
  - cron: '24 4 14 * *'
env:
  ARTIFACT: jhipster-app
  JAVA_VERSION: 11
  NODE_VERSION: 16.17.0

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJSON(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: echo "$MATRIX_CONTEXT"
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3.1.0
    - uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - uses: actions/setup-java@v3.5.1
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: adopt
        cache: 'maven'
    - name: Install node.js packages
      run: npm install
    - name: Run backend test
      run: npm run ci:backend:test
    - name: Run frontend test
      run: npm run ci:frontend:test
    - name: Package application
      run: npm run java:jar:prod
    - name: Make sure build did not change anything
      run: git diff --exit-code
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3.1.0
    - uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - uses: actions/setup-java@v3.5.1
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: adopt
        cache: 'maven'
    - name: Install node.js packages
      run: npm install
    - name: Run backend test
      shell: bash
      run: npm run ci:backend:test
    - name: Run frontend test
      shell: bash
      run: npm run ci:frontend:test
    - name: Package application
      shell: bash
      run: npm run java:jar:prod
    - name: Make sure build did not change anything
      run: git diff --exit-code
  pipeline:
    name: app pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - uses: actions/setup-java@v3.5.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: adopt
          cache: 'maven'
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        run: npm run ci:backend:test
      - name: Run frontend test
        run: npm run ci:frontend:test
      - name: Package application
        run: npm run java:jar:prod
      - name: Build and publish docker image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./mvnw -ntp jib:build -Djib.to.image=ghcr.io/${GITHUB_REPOSITORY,,}${DOCKER_TAG} -Djib.to.auth.username="${{ github.actor }}" -Djib.to.auth.password="${{ secrets.GITHUB_TOKEN }}" -Pprod
      - name: 'E2E: Package'
        run: npm run ci:e2e:package
      - name: 'E2E: Prepare'
        run: npm run ci:e2e:prepare
      - name: 'E2E: Run'
        run: npm run ci:e2e:run
        env:
          CYPRESS_ENABLE_RECORD: false
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: 'E2E: Teardown'
        run: npm run ci:e2e:teardown
      - name: Make sure build did not change anything
        run: git diff --exit-code
